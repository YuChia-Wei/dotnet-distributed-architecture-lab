version: '3.8'

services:
  rabbitmq:
    image: rabbitmq:4.1.2-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq/
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest

  postgres:
    image: postgres:16
    container_name: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      # copy the sql script to create tables
      - ./sql-script/create_orders_table.sql:/docker-entrypoint-initdb.d/create_orders_table.sql
      # copy the sql script to fill tables
      - ./sql-script/create_products_table:/docker-entrypoint-initdb.d/create_products_table.sql
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=mqarchlab_db

  orders-api:
    build:
      context: ..
      dockerfile: src/SaleOrders.Api/Dockerfile
    container_name: orders-api
    environment:
      - MessageBroker__ConnectionString=amqp://guest:guest@rabbitmq:5672
      - ConnectionStrings__DefaultConnection=User ID=user;Password=password;Host=postgres;Port=5432;Database=mqarchlab_db;Pooling=true;
    ports:
      - "8080:8080"
      - "8081:8081"
    depends_on:
      - rabbitmq
      - postgres

  orders-consumer:
    build:
      context: ..
      dockerfile: src/SaleOrders.Consumer/Dockerfile
    container_name: orders-consumer
    depends_on:
      - rabbitmq
      - postgres

  product-api:
    build:
      context: ..
      dockerfile: src/SaleProduct.Api/Dockerfile
    container_name: product-api
    ports:
      - "8090:8080"
      - "8091:8081"
    depends_on:
      - rabbitmq
      - postgres

  product-consumer:
    build:
      context: ..
      dockerfile: src/SaleProduct.Consumer/Dockerfile
    container_name: product-consumer
    depends_on:
      - rabbitmq
      - postgres

volumes:
  rabbitmq_data:
  postgres_data: